[{"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\index.js":"1","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\App.js":"2","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\CheckoutForm.js":"4","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\ContactInfo.js":"5","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\ShippingAddress.js":"6","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\Toggle.js":"7","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\input_options\\countryOptions.js":"8","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\BillingInfo.js":"9","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\Payment.js":"10","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\ShippingMethod.js":"11","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\services\\inputValidator.js":"12","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\Functions.js":"13","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\right\\Cart.js":"14"},{"size":560,"mtime":1610667109431,"results":"15","hashOfConfig":"16"},{"size":191,"mtime":1610665662286,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1607208388606,"results":"18","hashOfConfig":"16"},{"size":604,"mtime":1610950925286,"results":"19","hashOfConfig":"16"},{"size":9623,"mtime":1610930037337,"results":"20","hashOfConfig":"16"},{"size":2792,"mtime":1610918440049,"results":"21","hashOfConfig":"16"},{"size":404,"mtime":1610668769255,"results":"22","hashOfConfig":"16"},{"size":22420,"mtime":1610670061335,"results":"23","hashOfConfig":"16"},{"size":7879,"mtime":1610950790826,"results":"24","hashOfConfig":"16"},{"size":3488,"mtime":1610710959313,"results":"25","hashOfConfig":"16"},{"size":3951,"mtime":1610711007452,"results":"26","hashOfConfig":"16"},{"size":482,"mtime":1610928484335,"results":"27","hashOfConfig":"16"},{"size":2109,"mtime":1610925433448,"results":"28","hashOfConfig":"16"},{"size":3190,"mtime":1610952351083,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"arxmm7",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\index.js",[],["62","63"],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\App.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\CheckoutForm.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\ContactInfo.js",["64"],"import React, { Component } from \"react\";\r\nimport { Form, FormGroup, Input, Row, Col, Button } from \"reactstrap\";\r\nimport Toggle from \"../Toggle\";\r\nimport PlusIcon from \"../../assets/images/_ionicons_svg_md-add.png\";\r\nimport CountryOptions from \"./input_options/countryOptions\";\r\nimport { emailRegex, formValid } from \"../services/inputValidator\";\r\nimport BillingInfo from \"./BillingInfo\";\r\n\r\nexport default class ContactInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: null,\r\n      phone: null,\r\n      firstName: null,\r\n      lastName: null,\r\n      address: null,\r\n      address2: \"\",\r\n      postalCode: null,\r\n      city: null,\r\n      state: null,\r\n      formErrors: {\r\n        email: \"\",\r\n        phone: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        address: \"\",\r\n        postalCode: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n      console.log(`\r\n      --SUBMITTING--\r\n      CONTACT INFO\r\n      Email: ${this.state.email}\r\n      Phone: ${this.state.phone}\r\n      First Name: ${this.state.firstName}\r\n      Last Name: ${this.state.lastName}\r\n      \r\n      SHIPPING ADDRESS\r\n      Street address: ${this.state.address}\r\n      Optional address: ${this.state.address2}\r\n      PostalCode: ${this.state.postalCode}\r\n      City: ${this.state.city}\r\n      State: ${this.state.state}\r\n  \r\n      `);\r\n    } else {\r\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    // console.log(\"Name: \", name);\r\n    // console.log(\"Value\", value);\r\n\r\n    //else if\r\n    switch (name) {\r\n      case \"email\":\r\n        formErrors.email =\r\n          emailRegex.test(value) && value.length > 0\r\n            ? \"\"\r\n            : \"invalid email address\";\r\n        break;\r\n      case \"phone\":\r\n        formErrors.phone = value.length < 10 ? \"invalid phone number\" : \"\";\r\n        break;\r\n      case \"firstName\":\r\n        formErrors.firstName =\r\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\r\n        break;\r\n      case \"lastName\":\r\n        formErrors.lastName =\r\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\r\n        break;\r\n      case \"address\":\r\n        formErrors.address =\r\n          value.length < 3 ? \"Street address is required\" : \"\";\r\n        break;\r\n      case \"postalCode\":\r\n        formErrors.postalCode =\r\n          value.length < 3 ? \"Postal code is required\" : \"\";\r\n        break;\r\n      case \"city\":\r\n        formErrors.city = value.length < 3 ? \"City is required\" : \"\";\r\n        break;\r\n      case \"state\":\r\n        formErrors.state =\r\n          value.length < 3 ? \"State/Region/Province is required\" : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n  render() {\r\n    //it keeps changing everytime\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        {/* --------------------------CONTACT INFORMATION--------------------------------- */}\r\n\r\n        <Row className=\"container-fluid co-title-row\">\r\n          <h4>Contact Information</h4>\r\n        </Row>\r\n        <div>\r\n          <FormGroup>\r\n            <Input\r\n              className={formErrors.email.length > 0 ? \"error\" : null}\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              noValidate\r\n              onChange={this.handleChange}\r\n            />\r\n            {formErrors.email.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.email}</span>\r\n            )}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Input\r\n              className={formErrors.phone.length > 0 ? \"error\" : null}\r\n              type=\"text\"\r\n              name=\"phone\"\r\n              placeholder=\"Phone Number\"\r\n              noValidate\r\n              onChange={this.handleChange}\r\n            />\r\n            {formErrors.phone.length > 10 && (\r\n              <span className=\"errorMessage\">{formErrors.phone}</span>\r\n            )}\r\n          </FormGroup>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Input\r\n                  className={formErrors.firstName.length > 0 ? \"error\" : null}\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  placeholder=\"First name\"\r\n                  noValidate\r\n                  onChange={this.handleChange}\r\n                />\r\n                {formErrors.firstName.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.firstName}</span>\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Input\r\n                  className={formErrors.lastName.length > 0 ? \"error\" : null}\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  placeholder=\"Last name\"\r\n                  noValidate\r\n                  onChange={this.handleChange}\r\n                />\r\n                {formErrors.lastName.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.lastName}</span>\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        {/* ---------------------CONTACT INFORMATION END--------------------------------------- */}\r\n\r\n        {/* ------------------------------------SHIPPING ADDRESS----------------------------------------------------------              */}\r\n        <Row className=\"container-fluid co-title-row mb-4\">\r\n          <h4>Shipping Address</h4>\r\n        </Row>\r\n        <FormGroup>\r\n          <Input\r\n            className={formErrors.address.length > 0 ? \"error\" : null}\r\n            type=\"text\"\r\n            name=\"address\"\r\n            placeholder=\"Street Address\"\r\n            noValidate\r\n            onChange={this.handleChange}\r\n          />\r\n          {formErrors.address.length > 0 && (\r\n            <span className=\"errorMessage\">{formErrors.address}</span>\r\n          )}\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Toggle>\r\n            {({ on, off, toggle }) => (\r\n              <div className=\"toggle-container address2-text\">\r\n                {on && (\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"address2\"\r\n                    placeholder=\"Apartment, entry, etc. (optional)\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                )}\r\n                {off && (\r\n                  <div onClick={toggle}>\r\n                    <p className=\"p-xs\">\r\n                      <img\r\n                        className=\"toggle-ico\"\r\n                        src={PlusIcon}\r\n                        alt=\"expand icon\"\r\n                      />{\" \"}\r\n                      Add Optional Address\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </Toggle>\r\n        </FormGroup>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Input\r\n                className={formErrors.postalCode.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                name=\"postalCode\"\r\n                placeholder=\"Postal Code\"\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.postalCode.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.postalCode}</span>\r\n              )}\r\n            </FormGroup>\r\n          </Col>\r\n          {/* <Col md={6}>\r\n            <FormGroup className=\"dropdown-container\">\r\n              <CountryOptions onChange={this.handleChange} />\r\n            </FormGroup>\r\n          </Col> */}\r\n        </Row>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup className=\"dropdown-container\">\r\n              <Input\r\n                className={formErrors.city.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                name=\"city\"\r\n                placeholder=\"City\"\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.city.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.city}</span>\r\n              )}\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Input\r\n                className={formErrors.state.length > 0 ? \"error\" : null}\r\n                type=\"text\"\r\n                name=\"state\"\r\n                placeholder=\"State/Region/Province\"\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.state.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.state}</span>\r\n              )}\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        {/* ---------------------------END OF SHIPPING ADDRESS------------------------------------------------------------ */}\r\n        <BillingInfo\r\n          handleChange={this.handleChange}\r\n          address={this.state.address}\r\n          city={this.state.city}\r\n          state={this.state.state}\r\n          postalCode={this.state.postalCode}\r\n        />\r\n\r\n        <div className=\"buyNow\">\r\n          <Button disabled={!formValid} color=\"primary\" type=\"submit\">\r\n            Buy Now\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\ShippingAddress.js",["65"],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\Toggle.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\input_options\\countryOptions.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\BillingInfo.js",["66","67","68"],"import React, { Component } from \"react\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"reactstrap\";\r\nimport Toggle from \"../Toggle\";\r\nimport CountryOptions from \"./input_options/countryOptions\";\r\n// import StateOptions from \"./input_options/stateOptions\";\r\nimport PlusIcon from \"../../assets/images/_ionicons_svg_md-add.png\";\r\n\r\nexport default class BillingInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { checked: false };\r\n  }\r\n\r\n  handleChange = () => {\r\n    this.setState({\r\n      checked: !this.state.checked,\r\n    });\r\n  };\r\n\r\n  hideContent = () => {\r\n    this.setState({\r\n      checked: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const content = this.state.checked ? (\r\n      <Form>\r\n        <Toggle>\r\n          {({ on, off, toggle }) => (\r\n            <div className=\"toggle-container\">\r\n              {/* {on && (\r\n                <div>\r\n                  <Alert color=\"success\">\r\n                    You contact info has been saved.\r\n                  </Alert>\r\n                  <div className=\"button-right\">\r\n                    <Button onClick={toggle} color=\"secondary\">\r\n                      Edit\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              )} */}\r\n              {off && (\r\n                <div>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"co_bil_address\"\r\n                      id=\"coBillAddress\"\r\n                      placeholder=\"Address\"\r\n                    />\r\n                  </FormGroup>\r\n                  {/* <FormGroup>\r\n                    <Toggle>\r\n                      {({ on, off, toggle }) => (\r\n                        <div className=\"toggle-container address-text\">\r\n                          {on && (\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"co_bil_address2\"\r\n                              id=\"coBillAddress2\"\r\n                              placeholder=\"Apartment, suite, etc. (optional)\"\r\n                            />\r\n                          )}\r\n                          {off && (\r\n                            <div onClick={toggle}>\r\n                              <p>\r\n                                <img\r\n                                  className=\"toggle-ico\"\r\n                                  src={PlusIcon}\r\n                                  alt=\"expand icon\"\r\n                                />{\" \"}\r\n                                Add Address line 2\r\n                              </p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </Toggle>\r\n                  </FormGroup> */}\r\n\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"co_address\"\r\n                      id=\"coAddress\"\r\n                      placeholder=\"Street Address\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Toggle>\r\n                      {({ on, off, toggle }) => (\r\n                        <div className=\"toggle-container address2-text\">\r\n                          {on && (\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"co_address2\"\r\n                              id=\"coAddress2\"\r\n                              placeholder=\"Apartment, suite, etc. (optional)\"\r\n                            />\r\n                          )}\r\n                          {off && (\r\n                            <div onClick={toggle}>\r\n                              <p className=\"p-xs\">\r\n                                <img\r\n                                  className=\"toggle-ico\"\r\n                                  src={PlusIcon}\r\n                                  alt=\"expand icon\"\r\n                                />{\" \"}\r\n                                Add Address line 2\r\n                              </p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </Toggle>\r\n                  </FormGroup>\r\n                  <Row form>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Input\r\n                          className=\"zip-input\"\r\n                          type=\"text\"\r\n                          name=\"co_postalcode\"\r\n                          id=\"coPostalCode\"\r\n                          placeholder=\"Postal Code\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup className=\"dropdown-container\">\r\n                        <CountryOptions />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row form>\r\n                    <Col md={6}>\r\n                      <FormGroup className=\"dropdown-container\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"co_city\"\r\n                          id=\"coCity\"\r\n                          placeholder=\"City\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Input\r\n                          className=\"zip-input\"\r\n                          type=\"text\"\r\n                          name=\"co_zipcode\"\r\n                          id=\"coZipCode\"\r\n                          placeholder=\"State/Region/Province\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  {/* <div className=\"button-right\">\r\n                    <Button onClick={toggle} color=\"primary\">\r\n                      Save\r\n                    </Button>\r\n                  </div> */}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Toggle>\r\n      </Form>\r\n    ) : null;\r\n\r\n    return (\r\n      <div className=\"billing-container\">\r\n        <Row className=\"container-fluid co-title-row mb-4\">\r\n          <h4>Billing Information</h4>\r\n        </Row>\r\n\r\n        <ListGroup>\r\n          <Container>\r\n            <Row>\r\n              <p>\r\n                Please provide us with your billing information, so we can send\r\n                you an invoice after order confirmation.\r\n              </p>\r\n            </Row>\r\n          </Container>\r\n          <FormGroup tag=\"fieldset\">\r\n            <ListGroupItem>\r\n              <FormGroup check>\r\n                <Input\r\n                  type=\"radio\"\r\n                  name=\"coBillingSelection\"\r\n                  onChange={this.hideContent}\r\n                  defaultChecked\r\n                />\r\n                <Container>\r\n                  <Row className=\"container-fluid\">\r\n                    <h6>Same as shipping address</h6>\r\n                  </Row>\r\n                </Container>\r\n              </FormGroup>\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <FormGroup check>\r\n                <Input\r\n                  type=\"radio\"\r\n                  name=\"coBillingSelection\"\r\n                  checked={this.state.checked}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <Container>\r\n                  <Row>\r\n                    <h6>Use a different billing address</h6>\r\n                  </Row>\r\n                </Container>\r\n              </FormGroup>\r\n            </ListGroupItem>\r\n          </FormGroup>\r\n        </ListGroup>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\Payment.js",[],["69","70"],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\ShippingMethod.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\services\\inputValidator.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\Functions.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\right\\Cart.js",["71","72","73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":22},{"ruleId":"79","severity":1,"message":"83","line":2,"column":38,"nodeType":"81","messageId":"82","endLine":2,"endColumn":43},{"ruleId":"79","severity":1,"message":"84","line":3,"column":3,"nodeType":"81","messageId":"82","endLine":3,"endColumn":8},{"ruleId":"79","severity":1,"message":"85","line":4,"column":3,"nodeType":"81","messageId":"82","endLine":4,"endColumn":9},{"ruleId":"79","severity":1,"message":"83","line":11,"column":3,"nodeType":"81","messageId":"82","endLine":11,"endColumn":8},{"ruleId":"75","replacedBy":"86"},{"ruleId":"77","replacedBy":"87"},{"ruleId":"79","severity":1,"message":"88","line":4,"column":7,"nodeType":"81","messageId":"82","endLine":4,"endColumn":13},{"ruleId":"79","severity":1,"message":"89","line":12,"column":24,"nodeType":"81","messageId":"82","endLine":12,"endColumn":39},{"ruleId":"90","severity":1,"message":"91","line":45,"column":24,"nodeType":"92","messageId":"93","endLine":45,"endColumn":26},{"ruleId":"79","severity":1,"message":"94","line":52,"column":12,"nodeType":"81","messageId":"82","endLine":52,"endColumn":23},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'CountryOptions' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","'Alert' is defined but never used.","'Button' is defined but never used.",["95"],["96"],"'circle' is assigned a value but never used.","'setGeneralPrice' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleClick' is defined but never used.","no-global-assign","no-unsafe-negation"]