[{"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\index.js":"1","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\App.js":"2","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\CheckoutForm.js":"4","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\ContactInfo.js":"5","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\ShippingAddress.js":"6","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\Toggle.js":"7","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\input_options\\countryOptions.js":"8","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\BillingInfo.js":"9","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\Payment.js":"10","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\ShippingMethod.js":"11"},{"size":560,"mtime":1610667109431,"results":"12","hashOfConfig":"13"},{"size":191,"mtime":1610665662286,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1607208388606,"results":"15","hashOfConfig":"13"},{"size":896,"mtime":1610720640669,"results":"16","hashOfConfig":"13"},{"size":3530,"mtime":1610763438603,"results":"17","hashOfConfig":"13"},{"size":2792,"mtime":1610671220537,"results":"18","hashOfConfig":"13"},{"size":404,"mtime":1610668769255,"results":"19","hashOfConfig":"13"},{"size":22420,"mtime":1610670061335,"results":"20","hashOfConfig":"13"},{"size":7879,"mtime":1610673436959,"results":"21","hashOfConfig":"13"},{"size":3488,"mtime":1610710959313,"results":"22","hashOfConfig":"13"},{"size":3951,"mtime":1610711007452,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"arxmm7",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\index.js",[],["49","50"],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\App.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\CheckoutForm.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\ContactInfo.js",["51"],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\ShippingAddress.js",["52"],"import React, { Component } from \"react\";\r\nimport Toggle from \"../Toggle\";\r\nimport { Row, Col, FormGroup, Input, Label } from \"reactstrap\";\r\nimport PlusIcon from \"../../assets/images/_ionicons_svg_md-add.png\";\r\nimport CountryOptions from \"./input_options/countryOptions\";\r\n\r\nexport default class ShippingAddress extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row className=\"container-fluid co-title-row mb-4\">\r\n          <h4>Shipping Address</h4>\r\n        </Row>\r\n        <FormGroup>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"co_address\"\r\n            id=\"coAddress\"\r\n            placeholder=\"Street Address\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Toggle>\r\n            {({ on, off, toggle }) => (\r\n              <div className=\"toggle-container address2-text\">\r\n                {on && (\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"co_address2\"\r\n                    id=\"coAddress2\"\r\n                    placeholder=\"Apartment, suite, etc. (optional)\"\r\n                  />\r\n                )}\r\n                {off && (\r\n                  <div onClick={toggle}>\r\n                    <p className=\"p-xs\">\r\n                      <img\r\n                        className=\"toggle-ico\"\r\n                        src={PlusIcon}\r\n                        alt=\"expand icon\"\r\n                      />{\" \"}\r\n                      Add Address line 2\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </Toggle>\r\n        </FormGroup>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Input\r\n                className=\"zip-input\"\r\n                type=\"text\"\r\n                name=\"co_postalcode\"\r\n                id=\"coPostalCode\"\r\n                placeholder=\"Postal Code\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup className=\"dropdown-container\">\r\n              <CountryOptions />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup className=\"dropdown-container\">\r\n              <Input\r\n                type=\"text\"\r\n                name=\"co_city\"\r\n                id=\"coCity\"\r\n                placeholder=\"City\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Input\r\n                className=\"zip-input\"\r\n                type=\"text\"\r\n                name=\"co_zipcode\"\r\n                id=\"coZipCode\"\r\n                placeholder=\"State/Region/Province\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\Toggle.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\input_options\\countryOptions.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\BillingInfo.js",["53","54","55"],"import React, { Component } from \"react\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"reactstrap\";\r\nimport Toggle from \"../Toggle\";\r\nimport CountryOptions from \"./input_options/countryOptions\";\r\n// import StateOptions from \"./input_options/stateOptions\";\r\nimport PlusIcon from \"../../assets/images/_ionicons_svg_md-add.png\";\r\n\r\nexport default class BillingInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { checked: false };\r\n  }\r\n\r\n  handleChange = () => {\r\n    this.setState({\r\n      checked: !this.state.checked,\r\n    });\r\n  };\r\n\r\n  hideContent = () => {\r\n    this.setState({\r\n      checked: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const content = this.state.checked ? (\r\n      <Form>\r\n        <Toggle>\r\n          {({ on, off, toggle }) => (\r\n            <div className=\"toggle-container\">\r\n              {/* {on && (\r\n                <div>\r\n                  <Alert color=\"success\">\r\n                    You contact info has been saved.\r\n                  </Alert>\r\n                  <div className=\"button-right\">\r\n                    <Button onClick={toggle} color=\"secondary\">\r\n                      Edit\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              )} */}\r\n              {off && (\r\n                <div>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"co_bil_address\"\r\n                      id=\"coBillAddress\"\r\n                      placeholder=\"Address\"\r\n                    />\r\n                  </FormGroup>\r\n                  {/* <FormGroup>\r\n                    <Toggle>\r\n                      {({ on, off, toggle }) => (\r\n                        <div className=\"toggle-container address-text\">\r\n                          {on && (\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"co_bil_address2\"\r\n                              id=\"coBillAddress2\"\r\n                              placeholder=\"Apartment, suite, etc. (optional)\"\r\n                            />\r\n                          )}\r\n                          {off && (\r\n                            <div onClick={toggle}>\r\n                              <p>\r\n                                <img\r\n                                  className=\"toggle-ico\"\r\n                                  src={PlusIcon}\r\n                                  alt=\"expand icon\"\r\n                                />{\" \"}\r\n                                Add Address line 2\r\n                              </p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </Toggle>\r\n                  </FormGroup> */}\r\n\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"co_address\"\r\n                      id=\"coAddress\"\r\n                      placeholder=\"Street Address\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Toggle>\r\n                      {({ on, off, toggle }) => (\r\n                        <div className=\"toggle-container address2-text\">\r\n                          {on && (\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"co_address2\"\r\n                              id=\"coAddress2\"\r\n                              placeholder=\"Apartment, suite, etc. (optional)\"\r\n                            />\r\n                          )}\r\n                          {off && (\r\n                            <div onClick={toggle}>\r\n                              <p className=\"p-xs\">\r\n                                <img\r\n                                  className=\"toggle-ico\"\r\n                                  src={PlusIcon}\r\n                                  alt=\"expand icon\"\r\n                                />{\" \"}\r\n                                Add Address line 2\r\n                              </p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </Toggle>\r\n                  </FormGroup>\r\n                  <Row form>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Input\r\n                          className=\"zip-input\"\r\n                          type=\"text\"\r\n                          name=\"co_postalcode\"\r\n                          id=\"coPostalCode\"\r\n                          placeholder=\"Postal Code\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup className=\"dropdown-container\">\r\n                        <CountryOptions />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row form>\r\n                    <Col md={6}>\r\n                      <FormGroup className=\"dropdown-container\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"co_city\"\r\n                          id=\"coCity\"\r\n                          placeholder=\"City\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Input\r\n                          className=\"zip-input\"\r\n                          type=\"text\"\r\n                          name=\"co_zipcode\"\r\n                          id=\"coZipCode\"\r\n                          placeholder=\"State/Region/Province\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  {/* <div className=\"button-right\">\r\n                    <Button onClick={toggle} color=\"primary\">\r\n                      Save\r\n                    </Button>\r\n                  </div> */}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Toggle>\r\n      </Form>\r\n    ) : null;\r\n\r\n    return (\r\n      <div className=\"billing-container\">\r\n        <Row className=\"container-fluid co-title-row mb-4\">\r\n          <h4>Billing Information</h4>\r\n        </Row>\r\n\r\n        <ListGroup>\r\n          <Container>\r\n            <Row>\r\n              <p>\r\n                Please provide us with your billing information, so we can send\r\n                you an invoice after order confirmation.\r\n              </p>\r\n            </Row>\r\n          </Container>\r\n          <FormGroup tag=\"fieldset\">\r\n            <ListGroupItem>\r\n              <FormGroup check>\r\n                <Input\r\n                  type=\"radio\"\r\n                  name=\"coBillingSelection\"\r\n                  onChange={this.hideContent}\r\n                  defaultChecked\r\n                />\r\n                <Container>\r\n                  <Row className=\"container-fluid\">\r\n                    <h6>Same as shipping address</h6>\r\n                  </Row>\r\n                </Container>\r\n              </FormGroup>\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <FormGroup check>\r\n                <Input\r\n                  type=\"radio\"\r\n                  name=\"coBillingSelection\"\r\n                  checked={this.state.checked}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <Container>\r\n                  <Row>\r\n                    <h6>Use a different billing address</h6>\r\n                  </Row>\r\n                </Container>\r\n              </FormGroup>\r\n            </ListGroupItem>\r\n          </FormGroup>\r\n        </ListGroup>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\Payment.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment\\src\\components\\left\\ShippingMethod.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":59,"column":5,"nodeType":"62","messageId":"63","endLine":72,"endColumn":6},{"ruleId":"64","severity":1,"message":"65","line":3,"column":38,"nodeType":"66","messageId":"67","endLine":3,"endColumn":43},{"ruleId":"64","severity":1,"message":"68","line":3,"column":3,"nodeType":"66","messageId":"67","endLine":3,"endColumn":8},{"ruleId":"64","severity":1,"message":"69","line":4,"column":3,"nodeType":"66","messageId":"67","endLine":4,"endColumn":9},{"ruleId":"64","severity":1,"message":"65","line":11,"column":3,"nodeType":"66","messageId":"67","endLine":11,"endColumn":8},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'Label' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]